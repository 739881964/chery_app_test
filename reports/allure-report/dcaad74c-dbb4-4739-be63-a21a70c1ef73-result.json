{"name": "test_set_light_delay[delay_data4]", "status": "failed", "statusDetails": {"message": "AssertionError: 设置大灯延时-六十秒-模式成功\nassert 'false' == 'true'\n  - true\n  + false", "trace": "self = <test_menu_light.TestMenuLight object at 0x105c97610>\ndelay_data = ('六十秒', 'true')\ninit_menu_light = <pages.car_settings.menu_light_page.MenuLightPage object at 0x1060423d0>\n\n    @allure.story('大灯延时操作')\n    @pytest.mark.flaky(reruns=3)\n    @pytest.mark.set_light_delay_control\n    @pytest.mark.parametrize('delay_data', light_delay_data)\n    def test_set_light_delay(self, delay_data, init_menu_light):\n        \"\"\"\n        大灯延时操作\n        :param init_menu_light:\n        :param delay_data:\n        :return:\n        \"\"\"\n        menu_light_page = init_menu_light\n        mode_key, bool_key = delay_data[0], delay_data[-1]\n        # 设置灯光的模式操作步骤\n        menu_light_page.set_light_delay(mode_key)\n    \n        # 获取大灯设置模式对应的checked属性值\n        result = menu_light_page.light_delay_elem(mode_key).get_attribute('checked')\n        try:\n            assert result == bool_key, f'设置大灯延时-{mode_key}-模式成功'\n            logger.info('result = {}'.format(bool_key))\n        except AssertionError as e:\n            logger.error('result !=  {}'.format(bool_key))\n>           raise e\n\ntests/car_settings/test_menu_light.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_menu_light.TestMenuLight object at 0x105c97610>\ndelay_data = ('六十秒', 'true')\ninit_menu_light = <pages.car_settings.menu_light_page.MenuLightPage object at 0x1060423d0>\n\n    @allure.story('大灯延时操作')\n    @pytest.mark.flaky(reruns=3)\n    @pytest.mark.set_light_delay_control\n    @pytest.mark.parametrize('delay_data', light_delay_data)\n    def test_set_light_delay(self, delay_data, init_menu_light):\n        \"\"\"\n        大灯延时操作\n        :param init_menu_light:\n        :param delay_data:\n        :return:\n        \"\"\"\n        menu_light_page = init_menu_light\n        mode_key, bool_key = delay_data[0], delay_data[-1]\n        # 设置灯光的模式操作步骤\n        menu_light_page.set_light_delay(mode_key)\n    \n        # 获取大灯设置模式对应的checked属性值\n        result = menu_light_page.light_delay_elem(mode_key).get_attribute('checked')\n        try:\n>           assert result == bool_key, f'设置大灯延时-{mode_key}-模式成功'\nE           AssertionError: 设置大灯延时-六十秒-模式成功\nE           assert 'false' == 'true'\nE             - true\nE             + false\n\ntests/car_settings/test_menu_light.py:41: AssertionError"}, "description": "\n        大灯延时操作\n        :param init_menu_light:\n        :param delay_data:\n        :return:\n        ", "attachments": [{"name": "log", "source": "07d83a69-fee2-4605-b249-d2e9c349f308-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "delay_data", "value": "('六十秒', 'true')"}], "start": 1688608548354, "stop": 1688608553346, "uuid": "769c7338-32aa-4ffa-9bc1-f7e9c4ad2ce1", "historyId": "919761ceda5c4a3332e02758a8cc25e4", "testCaseId": "472ad17c5687b5cdc4b6f1069d4cd9c9", "fullName": "tests.car_settings.test_menu_light.TestMenuLight#test_set_light_delay", "labels": [{"name": "story", "value": "大灯延时操作"}, {"name": "feature", "value": "车辆设置-外灯"}, {"name": "tag", "value": "set_light_delay_control"}, {"name": "tag", "value": "flaky(reruns=3)"}, {"name": "parentSuite", "value": "tests.car_settings"}, {"name": "suite", "value": "test_menu_light"}, {"name": "subSuite", "value": "TestMenuLight"}, {"name": "host", "value": "yuxiangdeMacBook-Pro.local"}, {"name": "thread", "value": "22618-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.car_settings.test_menu_light"}]}