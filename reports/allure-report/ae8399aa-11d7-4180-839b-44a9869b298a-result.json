{"name": "test_select_drive[data2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'false' == 'true'\n  - true\n  + false", "trace": "self = <test_drive.TestDrive object at 0x1047b3d60>\ninit_drive = <pages.car_settings.drive_page.DrivePage object at 0x104b1ccd0>\ndata = ('运动', 'true')\n\n    @pytest.mark.flaky(reruns=3)\n    @pytest.mark.parametrize('data', drive_data)\n    @pytest.mark.select_drive_1\n    def test_select_drive(self, init_drive, data):\n        \"\"\"\n        选择不同的驾驶模式\n        :return:\n        \"\"\"\n        drive_page = init_drive\n    \n        mode = data[0]\n        logger.info('选择的驾驶模式为: {}'.format(mode))\n        drive_page.select_drive_mode(mode)\n    \n        sleep(3)\n    \n        checked = drive_page.drive_list_select_elem(mode).get_attribute('checked')\n        logger.info('选择的驾驶模式bool值是: {}'.format(checked))\n    \n        try:\n            assert checked == data[-1]\n            logger.info('drive mode checked is: {}'.format(checked))\n        except AssertionError as e:\n            logger.error(e)\n>           raise e\n\ntests/car_settings/test_drive.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_drive.TestDrive object at 0x1047b3d60>\ninit_drive = <pages.car_settings.drive_page.DrivePage object at 0x104b1ccd0>\ndata = ('运动', 'true')\n\n    @pytest.mark.flaky(reruns=3)\n    @pytest.mark.parametrize('data', drive_data)\n    @pytest.mark.select_drive_1\n    def test_select_drive(self, init_drive, data):\n        \"\"\"\n        选择不同的驾驶模式\n        :return:\n        \"\"\"\n        drive_page = init_drive\n    \n        mode = data[0]\n        logger.info('选择的驾驶模式为: {}'.format(mode))\n        drive_page.select_drive_mode(mode)\n    \n        sleep(3)\n    \n        checked = drive_page.drive_list_select_elem(mode).get_attribute('checked')\n        logger.info('选择的驾驶模式bool值是: {}'.format(checked))\n    \n        try:\n>           assert checked == data[-1]\nE           AssertionError: assert 'false' == 'true'\nE             - true\nE             + false\n\ntests/car_settings/test_drive.py:41: AssertionError"}, "description": "\n        选择不同的驾驶模式\n        :return:\n        ", "attachments": [{"name": "log", "source": "4433df9c-eb4b-414c-90d5-d147ec5423e3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "('运动', 'true')"}], "start": 1687920040483, "stop": 1687920044713, "uuid": "8cd8ff8b-9ecd-442f-bd70-264ec08d69a0", "historyId": "aa2b97dca0ed99170d4e445ac24e6cdf", "testCaseId": "d3701ea766832af9539bfb829f2b86f8", "fullName": "tests.car_settings.test_drive.TestDrive#test_select_drive", "labels": [{"name": "tag", "value": "select_drive_1"}, {"name": "tag", "value": "flaky(reruns=3)"}, {"name": "parentSuite", "value": "tests.car_settings"}, {"name": "suite", "value": "test_drive"}, {"name": "subSuite", "value": "TestDrive"}, {"name": "host", "value": "yuxiangdeMacBook-Pro.local"}, {"name": "thread", "value": "50755-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.car_settings.test_drive"}]}