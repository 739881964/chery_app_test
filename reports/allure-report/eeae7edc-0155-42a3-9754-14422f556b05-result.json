{"name": "test_set_light[data3]", "status": "failed", "statusDetails": {"message": "AssertionError: 切换大灯-近光灯-模式成功\nassert 'false' == 'true'\n  - true\n  + false", "trace": "self = <test_menu_light.TestMenuLight object at 0x1047992b0>\ndata = ('近光灯', 'true')\ninit_menu_light = <pages.car_settings.menu_light_page.MenuLightPage object at 0x104a47d00>\n\n    @pytest.mark.flaky(reruns=3)\n    @pytest.mark.set_light_case\n    @pytest.mark.parametrize('data', light_value_data)\n    def test_set_light(self, data, init_menu_light):\n        \"\"\"\n        大灯调节操作\n        :param init_menu_light:\n        :param data:\n        :return:\n        \"\"\"\n        menu_light_page = init_menu_light\n        # menu_light_page = MenuLightPage(driver)\n        # 获取对应的模式value、是否被选中true/false\n        mode_key, bool_key = data[0], data[-1]\n        # 设置灯光的模式操作步骤\n        menu_light_page.set_light(mode_key)\n    \n        # 获取大灯设置模式对应的checked属性值\n        result = menu_light_page.light_set_elem(mode_key).get_attribute('checked')\n        try:\n            assert result == bool_key, f'切换大灯-{mode_key}-模式成功'\n            logger.info('result = {}'.format(bool_key))\n        except AssertionError as e:\n            logger.error('result !=  {}'.format(bool_key))\n>           raise e\n\ntests/car_settings/test_menu_light.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_menu_light.TestMenuLight object at 0x1047992b0>\ndata = ('近光灯', 'true')\ninit_menu_light = <pages.car_settings.menu_light_page.MenuLightPage object at 0x104a47d00>\n\n    @pytest.mark.flaky(reruns=3)\n    @pytest.mark.set_light_case\n    @pytest.mark.parametrize('data', light_value_data)\n    def test_set_light(self, data, init_menu_light):\n        \"\"\"\n        大灯调节操作\n        :param init_menu_light:\n        :param data:\n        :return:\n        \"\"\"\n        menu_light_page = init_menu_light\n        # menu_light_page = MenuLightPage(driver)\n        # 获取对应的模式value、是否被选中true/false\n        mode_key, bool_key = data[0], data[-1]\n        # 设置灯光的模式操作步骤\n        menu_light_page.set_light(mode_key)\n    \n        # 获取大灯设置模式对应的checked属性值\n        result = menu_light_page.light_set_elem(mode_key).get_attribute('checked')\n        try:\n>           assert result == bool_key, f'切换大灯-{mode_key}-模式成功'\nE           AssertionError: 切换大灯-近光灯-模式成功\nE           assert 'false' == 'true'\nE             - true\nE             + false\n\ntests/car_settings/test_menu_light.py:41: AssertionError"}, "description": "\n        大灯调节操作\n        :param init_menu_light:\n        :param data:\n        :return:\n        ", "attachments": [{"name": "log", "source": "cda88469-773f-4d5b-9bd6-2c0db946bfa1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "('近光灯', 'true')"}], "start": 1687920163397, "stop": 1687920168394, "uuid": "5cecaaa5-9165-4e48-8819-58403e06551a", "historyId": "1d83091eef4ad534416287145c2ce88a", "testCaseId": "0e10c35ec287ec9a63cac09816cb6ca1", "fullName": "tests.car_settings.test_menu_light.TestMenuLight#test_set_light", "labels": [{"name": "tag", "value": "set_light_case"}, {"name": "tag", "value": "flaky(reruns=3)"}, {"name": "parentSuite", "value": "tests.car_settings"}, {"name": "suite", "value": "test_menu_light"}, {"name": "subSuite", "value": "TestMenuLight"}, {"name": "host", "value": "yuxiangdeMacBook-Pro.local"}, {"name": "thread", "value": "50755-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.car_settings.test_menu_light"}]}